-- MySQL Script generated by MySQL Workbench
-- Sat Dec  2 04:44:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS,
    UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS,
    FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE,
    SQL_MODE = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_coviver
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_coviver` DEFAULT CHARACTER SET utf8;

USE `db_coviver`;

-- -----------------------------------------------------
-- Table `db_coviver`.`Account_Types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Account_Types` (
    `type_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `type_name` VARCHAR(255) NOT NULL,
    `icon_path` VARCHAR(255) NULL,
    PRIMARY KEY (`type_id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Accounts` (
    `account_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `account_name` VARCHAR(255) NOT NULL,
    `details` TINYTEXT NULL,
    `category_id` INT UNSIGNED NULL,
    `type_id` INT UNSIGNED NULL,
    PRIMARY KEY (`account_id`),
    CONSTRAINT `fk_Accounts_Account_Categories` FOREIGN KEY (`category_id`) REFERENCES `db_coviver`.`Account_Categories` (`category_id`) ON DELETE
    SET NULL ON UPDATE CASCADE,
        CONSTRAINT `fk_Accounts_Account_Types` FOREIGN KEY (`type_id`) REFERENCES `db_coviver`.`Account_Types` (`type_id`) ON DELETE
    SET NULL ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Account_Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Account_Categories` (
    `category_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `category_name` VARCHAR(255) NOT NULL,
    PRIMARY KEY (`category_id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Transaction_Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Transaction_Categories` (
    `category_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `category_name` VARCHAR(255) NOT NULL,
    PRIMARY KEY (`category_id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Users` (
    `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    `email` VARCHAR(255) NOT NULL,
    `password_hash` VARCHAR(255) NOT NULL,
    `google_id` VARCHAR(255) NULL,
    PRIMARY KEY (`user_id`),
    UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Account_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Account_Users` (
    `account_id` INT UNSIGNED NOT NULL,
    `user_id` INT UNSIGNED NOT NULL,
    `default_percentage` DECIMAL(5, 2) NULL,
    PRIMARY KEY (`account_id`, `user_id`),
    CONSTRAINT `fk_AccountUsers_Accounts` FOREIGN KEY (`account_id`) REFERENCES `db_coviver`.`Accounts` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT `fk_AccountUsers_Users` FOREIGN KEY (`user_id`) REFERENCES `db_coviver`.`Users` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Currency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Currencies` (
    `currency_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `currency_code` VARCHAR(3) NOT NULL,
    `currency_name` VARCHAR(255) NOT NULL,
    `currency_symbol` VARCHAR(10) NULL,
    PRIMARY KEY (`currency_id`),
    UNIQUE INDEX `currency_code_UNIQUE` (`currency_code` ASC) VISIBLE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Transactions` (
    `transaction_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `creator_user_id` INT UNSIGNED NOT NULL,
    `name` VARCHAR(255) NOT NULL,
    `description` VARCHAR(255) NULL,
    `total_amount` DECIMAL(10, 2) NOT NULL,
    `currency_id` INT UNSIGNED NOT NULL,
    `account_id` INT UNSIGNED NOT NULL,
    `transaction_date` DATETIME NOT NULL,
    `location` VARCHAR(255) NULL,
    `category_id` INT UNSIGNED NOT NULL,
    PRIMARY KEY (`transaction_id`),
    CONSTRAINT `fk_Transactions_Transaction_Categories` FOREIGN KEY (`category_id`) REFERENCES `db_coviver`.`Transaction_Categories` (`category_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT `fk_Transactions_Currencies` FOREIGN KEY (`currency_id`) REFERENCES `db_coviver`.`Currencies` (`currency_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT `fk_Transactions_Accounts` FOREIGN KEY (`account_id`) REFERENCES `db_coviver`.`Accounts` (`account_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Transaction_Recurrences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Transaction_Recurrences` (
    `transaction_id` INT UNSIGNED NOT NULL,
    `frequency` ENUM('Daily', 'Weekly', 'Monthly', 'Yearly') NOT NULL,
    `start_date` DATE NOT NULL,
    `day_of_month` INT NULL,
    `day_of_week` INT NULL,
    `occurrences` INT NULL,
    `end_date` DATE NULL,
    `status` ENUM('Active', 'Inactive') NOT NULL,
    `last_processed_date` DATE NULL,
    `next_processing_date` DATE NULL,
    PRIMARY KEY (`transaction_id`),
    CONSTRAINT `fk_transactions_transaction_id` FOREIGN KEY (`transaction_id`) REFERENCES `db_coviver`.`Transactions` (`transaction_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Transaction_Installments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Transaction_Installments` (
    `transaction_id` INT UNSIGNED NOT NULL,
    `total_installments` INT NOT NULL,
    `installment_amount` DECIMAL(10, 2) NOT NULL,
    `installment_number` INT NOT NULL,
    `due_date` DATE NOT NULL,
    `status` ENUM('Pending', 'Paid', 'Overdue') NOT NULL,
    PRIMARY KEY (`transaction_id`, `installment_number`),
    CONSTRAINT `fk_Transaction_Installments_transaction_id` FOREIGN KEY (`transaction_id`) REFERENCES `db_coviver`.`Transactions` (`transaction_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_coviver`.`Transaction_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_coviver`.`Transaction_Users` (
    `transaction_id` INT UNSIGNED NOT NULL,
    `user_id` INT UNSIGNED NOT NULL,
    `contribution_percentage` DECIMAL(5, 2) NULL,
    `fixed_amount` DECIMAL(10, 2) NULL,
    PRIMARY KEY (`transaction_id`, `user_id`),
    CONSTRAINT `fk_Transaction_Users_Transactions` FOREIGN KEY (`transaction_id`) REFERENCES `db_coviver`.`Transactions` (`transaction_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT `fk_Transaction_Users_Users` FOREIGN KEY (`user_id`) REFERENCES `db_coviver`.`Users` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Conceder permissões ao usuário coviver_admin
-- -----------------------------------------------------
GRANT ALL PRIVILEGES ON `db_coviver`.* TO 'coviver_admin'@'%';
FLUSH PRIVILEGES;

SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;